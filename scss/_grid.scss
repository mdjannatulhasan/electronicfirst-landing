@use "sass:math";

$grid-columns: 12;
$grid-gaps: (
	"0": 0,
	"1": 5px,
	"2": 10px,
	"3": 15px,
	"4": 20px,
	"5": 25px,
	"6": 30px,
	"7": 35px,
);
.mt-2 {
	margin-top: 10px;
}
$layout-values: flex-start, flex-end, center, space-between, space-around;

.container-fluid {
	padding: 0 20px;
}
.container {
	max-width: 1200px;
	margin: 0 auto;
	padding: 0 20px;
}

.flex {
	@include flex(25px);
}

.row {
	display: flex;
	flex-flow: row wrap;
	justify-content: center;
}

@each $key, $val in $grid-gaps {
	.gap-#{$key} > * {
		padding: $val;
	}
	.gap-x-#{$key} > * {
		padding: 0 $val;
	}
	.gap-y-#{$key} > * {
		padding: $val 0;
	}
	.gap-#{$key} {
		margin-left: -$val;
		margin-right: -$val;
	}
}

@each $val in $layout-values {
	.justify-#{$val} {
		justify-content: $val;
	}
}

@include xs {
	@for $i from 1 through $grid-columns {
		.col-xs-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
@include sm {
	@for $i from 1 through $grid-columns {
		.col-sm-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
@include md {
	@for $i from 1 through $grid-columns {
		.col-md-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
@include lg {
	@for $i from 1 through $grid-columns {
		.col-lg-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
@include xl {
	@for $i from 1 through $grid-columns {
		.col-xl-#{$i} {
			box-sizing: border-box;
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
